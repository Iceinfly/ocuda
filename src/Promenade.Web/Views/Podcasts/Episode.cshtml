@model Ocuda.Promenade.Controllers.ViewModels.Podcasts.EpisodeViewModel

<div class="row">
    <div class="col-12">
        <div class="row">
            <div class="col-12 col-lg">
                <h1 class="mb-2">@Model.PodcastItem.Title</h1>
                <div class="mb-2">
                    <em>
                        <a href="@Url.Action(nameof(PodcastsController.Podcast), new { stub = Model.Podcast.Stub})">@Localizer[Promenade.PodcastTitle, Model.Podcast.Title]</a>.
                        @Localizer[Promenade.PodcastEpisodePublished, Model.PodcastItem.Episode, Model.PodcastItem.PublishDate.Value.ToLongDateString()]
                    </em>
                </div>
            </div>
            <div class="col-12 col-lg-auto text-sm-start text-md-start text-lg-end">
                @if (Model.PodcastItem.ShowNotesSegmentId.HasValue)
                {
                    <div class="mb-4 mb-sm-2">
                        <a href="@Url.Action(nameof(PodcastsController.ShowNotes), new { podcastStub = Model.Podcast.Stub, episodeStub = Model.PodcastItem.Stub})"
                           target="_blank"
                           class="btn d-block d-md-inline-block btn-outline-primary">
                           <span class="fa-regular fa-file-lines"></span>
                           @Localizer[Promenade.ViewShowNotes]
                            <span class="visually-hidden">@Localizer[Promenade.NewWindow]</span>
                        </a>
                    </div>
                }
            </div>
        </div>
        <audio id="player" controls class="mb-2 w-100">
            <source src="@Model.PodcastItem.MediaUrl" type="@Model.PodcastItem.MediaType" />
        </audio>
        <p>@Model.PodcastItem.Description</p>
        <div><em>@Localizer[Promenade.KeywordsItem, Model.PodcastItem.Keywords]</em></div>
    </div>
</div>

@section scripts {
    @if (Context.Items.ContainsKey(Ocuda.Promenade.Controllers.ItemKey.GoogleAnalyticsTrackingCode))
    {
        <script>
        var player = document.getElementById("player");
        player.addEventListener("play", function () {
            if (typeof gtag !== 'undefined') {
                gtag('event', 'Podcast play', {
                    'event_category': '@Html.Raw(Model.Podcast.Title.Replace("'", "\\'"))',
                    'event_label': '@Model.PodcastItem.Episode.Value'
                });
            }
        });
        </script>
    }
}