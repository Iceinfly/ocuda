@model Ocuda.Ops.Controllers.Areas.BooksByMail.ViewModels.Home.BooksByMailCustomerViewModel

<div modal id="historyModal" name="History" isLarge="true">
    <div class="d-flex mb-4">
        <div class="flex-fill">
            <input id="historySearchText"
                   placeholder="Title/author"
                   class="form-control" />
        </div>
        <div class="ml-2">
            <button type="button"
                    id="historySearchButton"
                    class="btn btn-outline-info">
                Search
            </button>
        </div>
    </div>
    <div id="historySearchMessage" class="row d-none">
        <div class="col-12">
            <div class="alert alert-sm alert-info alert-dismissible">
                Search for '<strong id="historySearchTerm"></strong>' found <span id="historySearchCount"></span>
                <button type="button" class="close" id="historyClearSearch" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>
    </div>
    <div class="row">
        <div id="modalHistoryList" class="col-12">
        </div>
    </div>
</div>

<div modal
     isNonSubmit="true"
     id="notesModal"
     name="Customer Notes"
     class="updateFieldModal"
     data-field="Notes"
     data-display-id="#notesText"
     type="BooksByMail.TagHelpers.ModalTypes.Edit">
    <textarea asp-for="BooksByMailCustomer.Notes" class="fieldText" formgroup isSingleField="true"></textarea>
</div>

<div modal
     isNonSubmit="true"
     id="likesModal"
     name="Likes"
     class="updateFieldModal"
     data-field="Likes"
     data-display-id="#likesText"
     type="BooksByMail.TagHelpers.ModalTypes.Edit">
    <textarea asp-for="BooksByMailCustomer.Likes" class="fieldText" formgroup isSingleField="true"></textarea>
</div>

<div modal
     isNonSubmit="true"
     id="dislikesModal"
     name="Dislikes"
     class="updateFieldModal"
     data-field="Dislikes"
     data-display-id="#dislikesText"
     type="BooksByMail.TagHelpers.ModalTypes.Edit">
    <textarea asp-for="BooksByMailCustomer.Dislikes" class="fieldText" formgroup isSingleField="true"></textarea>
</div>

<div modal
     isNonSubmit="true"
     id="commentModal"
     name="Comment"
     type="BooksByMail.TagHelpers.ModalTypes.Add">
    <textarea asp-for="BooksByMailComment.Text" formgroup isSingleField="true"></textarea>
</div>

<div class="row" style="position: relative;">
    <div class="col-12 col-md-6 offset-md-3" style="position:fixed; z-index: 3">
        <div id="pageAlert" class="alert alert-dismissible fade d-none" role="alert">
            <span id="pageAlertText"></span>
            <button type="button" class="close" id="pageAlertClose" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header py-1 px-2">
                <span class="d-inline-block mt-1 mb-0 font-weight-bold">
                    <span class="fa-icon fas fa-user"></span>
                    @Model.Patron.NameFirst @Model.Patron.NameLast
                </span>
                <span class="fas fa-edit text-primary fa-pull-right pt-1"
                      style="cursor: pointer;"
                      data-toggle="modal"
                      data-target="#notesModal"></span>
            </div>
            <div class="card-body p-2">
                <div class="row">
                    <div class="col-12 col-md-4">
                        <strong>Last activity:</strong>
                        @(Model.Patron.LastActivityDate != null ? Model.Patron.LastActivityDate?.ToShortDateString() : "No activity")
                    </div>
                    <div class="col-12 col-md-4">
                        <strong>Barcode:</strong>
                        <span id="patronBarcode">@Model.Patron.Barcode</span>
                        <span id="copyBarcode"
                              class="far fa-copy text-primary"
                              style="cursor: pointer;"
                              data-title="Barcode copied to clipboard"
                              data-trigger="manual"></span>
                    </div>
                    <div class="col-12 col-md-4">
                        <strong>Patron ID:</strong>
                        @Model.Patron.PatronID
                    </div>
                </div>
                <hr class="mt-2 mb-0" />
                <div class="row">
                    <div id="notesText" class="col-12 pt-2">
                        @if (string.IsNullOrEmpty(Model.BooksByMailCustomer.Notes))
                        {
                            <em>No customer notes.</em>
                        }
                        else
                        {
                            @Model.BooksByMailCustomer.Notes
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-3">
    <div class="col-12 col-md-6">
        <div class="card mb-3">
            <div class="card-header py-1 px-2">
                <span class="d-inline-block mt-1 mb-0 font-weight-bold">Checked out</span>
                <button class="float-right btn btn-sm btn-outline-primary @(Model.PatronHistoryCount == 0 ? "d-none" : "")"
                        data-toggle="modal"
                        data-target="#historyModal">
                    Reading list <span class="badge badge-primary">@Model.PatronHistoryCount</span>
                </button>
            </div>
            <div class="card-body p-0">
                <table class="table table-sm table-striped m-0">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Author</th>
                            <th>Category</th>
                            <th>Due Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.PatronCheckouts.Count == 0)
                        {
                            <tr>
                                <td colspan="4">
                                    <em class="ml-1">No items checked out.</em>
                                </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var item in Model.PatronCheckouts)
                            {
                                <tr>
                                    <td>@item.Title</td>
                                    <td>@item.Author</td>
                                    <td>@item.Category</td>
                                    <td style="white-space: nowrap;">@item.DueDate.ToShortDateString()</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card mb-3">
            <div class="card-header py-1 px-2">
                <span class="d-inline-block mt-1 mb-0 font-weight-bold">On hold</span>
            </div>
            <div class="card-body p-0">
                <table class="table table-sm table-striped m-0">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Author</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.PatronHolds.Count == 0)
                        {
                            <tr>
                                <td colspan="3">
                                    <em class="ml-1">No items on hold.</em>
                                </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var item in Model.PatronHolds)
                            {
                                <tr>
                                    <td>@item.Title</td>
                                    <td>@item.Author</td>
                                    <td>@item.HoldStatus</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="col-12 col-md-6">
        <div class="card mb-3">
            <div class="card-header py-1 px-2">
                <span class="d-inline-block mt-1 mb-0 font-weight-bold">Likes</span>
                <span class="fas fa-edit text-primary fa-pull-right pt-1"
                      style="cursor: pointer;"
                      data-toggle="modal"
                      data-target="#likesModal"></span>
            </div>
            <div id="likesText" class="card-body p-2 @(string.IsNullOrEmpty(Model.BooksByMailCustomer.Likes) ? "font-italic" : "")">
                @(!string.IsNullOrEmpty(Model.BooksByMailCustomer.Likes) ? Model.BooksByMailCustomer.Likes : "None recorded.")
            </div>
        </div>
        <div class="card mb-3">
            <div class="card-header py-1 px-2">
                <span class="d-inline-block mt-1 mb-0 font-weight-bold">Dislikes</span>
                <span class="fas fa-edit text-primary fa-pull-right pt-1"
                      style="cursor: pointer;"
                      data-toggle="modal"
                      data-target="#dislikesModal"></span>
            </div>
            <div id="dislikesText" class="card-body p-2 @(string.IsNullOrEmpty(Model.BooksByMailCustomer.Dislikes) ? "font-italic" : "")">
                @(!string.IsNullOrEmpty(Model.BooksByMailCustomer.Dislikes) ? Model.BooksByMailCustomer.Dislikes : "None recorded.")
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header py-1 px-2">
                <span class="d-inline-block mt-1 mb-0 font-weight-bold">Comments</span>
                <span class="fas fa-plus-circle text-primary fa-pull-right pt-1"
                      style="cursor: pointer;"
                      data-toggle="modal"
                      data-target="#commentModal"></span>
            </div>
            <div class="card-body p-2">
                <div id="commentSection">
                    @if (Model.BooksByMailCustomer.Comments?.Count > 0)
                    {
                        @foreach (var comment in Model.BooksByMailCustomer.Comments)
                        {
                            <div class="row mb-2">
                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-body p-2">
                                            @comment.Text
                                        </div>
                                        <div class="card-footer text-muted py-1 px-2">
                                            <small>
                                                <span class="footer-username">
                                                    @comment.StaffUsername
                                                </span>
                                                <span class="footer-createdAt float-right">
                                                    @comment.CreatedAt.ToShortDateString()
                                                </span>
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <em>No comments.</em>
                    }
                </div>

            </div>

        </div>
    </div>
</div>

<div id="templateCard" class="row mb-2 d-none">
    <div class="col-12">
        <div class="card">
            <div class="card-body p-2"></div>
            <div class="card-footer text-muted py-1 px-2">
                <small>
                    <span class="footer-username"></span>
                    <span class="footer-createdAt float-right"></span>
                </small>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var historyUrl = "@Url.Action(nameof(HomeController.GetPatronHistory))";
        var updateFieldUrl = "@Url.Action(nameof(HomeController.UpdateCustomerField))";
        var addCommentUrl = "@Url.Action(nameof(HomeController.AddComment))";

        var search = "";
        var orderBy = 0;
        var orderDesc = false;
        var page = 1;

        function GetHistoryList(updateSearchText) {
            var patronID = "@Model.Patron.PatronID";
            $.get(historyUrl,
                {
                    patronID,
                    search,
                    orderBy,
                    orderDesc,
                    page
                }, function (response) {
                    $("#modalHistoryList").html(response);
                    if (updateSearchText) {
                        if (search != "") {
                            $("#historySearchMessage").removeClass("d-none");
                            $("#historySearchTerm").html(search);
                            var searchCountText = " " + historySearchCount;
                            if (historySearchCount == 1) {
                                searchCountText += " match.";
                            }
                            else {
                                searchCountText += " matches.";
                            }
                            $("#historySearchCount").html(searchCountText);
                        }
                        else {
                            $("#historySearchMessage").addClass("d-none");
                        }
                    }
                });
        }

        $("#historyModal").on("show.bs.modal", function () {
            GetHistoryList();
        });

        $("#historySearchText").on("keyup", function (e) {
            if (e.keyCode === 13) {
                $("#historySearchButton").click();
            }
        });

        $("#historySearchButton").on("click", function () {
            search = $("#historySearchText").val();
            orderBy = 0;
            orderDesc = false;
            page = 1;
            GetHistoryList(true);
        });

        $("#historyClearSearch").on("click", function () {
            $("#historySearchText").val("");

            search = "";
            orderBy = 0;
            orderDesc = false;
            page = 1;
            GetHistoryList(true);
        });

        $(document).on("click", ".sortable-column", function () {
            orderBy = $(this).data("orderby");
            orderDesc = $(this).data("orderdesc");
            page = 1;
            GetHistoryList();
        });

        $(document).on("click", ".page-link:not(.page-input)", function () {
            if (!$(this).hasClass("disabled")) {
                page = $(this).data("page");
                GetHistoryList();
            }
        });

        $(document).on("submit", ".page-form", function (e) {
            e.preventDefault();
            page = $(".page-input").val();
            GetHistoryList();
        });

        $("#copyBarcode").on("click", function () {
            copyToClipboard($("#patronBarcode"));
            $("#copyBarcode").tooltip('show');
            setTimeout(function () {
                $("#copyBarcode").tooltip('hide');
            }, 500);
        });

        var closeTimeout;

        function HideAlert(delay) {
            if (!delay) {
                delay = 5000;
            }
            closeTimeout = setTimeout(function () {
                $("#pageAlert").removeClass("show");
                setTimeout(function () {
                    $("#pageAlert").addClass("d-none");
                }, 175);
            }, delay);
        }

        $("#pageAlertClose").click(function () {
            $("#pageAlert").removeClass("show");
            $("#pageAlert").removeClass("d-none");
            clearTimeout(closeTimeout);
        });

        function ShowAlert(goodAlert, alertText) {
            if (goodAlert === true) {
                $("#pageAlert").removeClass("alert-danger").addClass("alert-success");
            } else {
                $("#pageAlert")
                    .removeClass("alert-success").addClass("alert-danger");
            }
            $("#pageAlertText").text(alertText);
            $("#pageAlert").removeClass("d-none");
            $("#pageAlert").addClass("show");
        }

        $(".updateFieldModal").on("click", ".modal-btn-confirm", function (e) {
            var button = $(this);
            var modal = $(e.delegateTarget);
            var id = "@Model.BooksByMailCustomer.Id";
            var field = modal.data("field");
            var text = modal.find(".fieldText").val();
            $.post(updateFieldUrl, { id, field, text }, function (response) {
                ResetSpinners(button);
                if (response.success) {
                    modal.modal("hide");
                    $(modal.data("display-id")).text(response.text);
                    modal.find(".modal-alert").addClass("d-none");
                }
                else {
                    modal.find(".modal-alert").removeClass("d-none").text(response.message);
                }
            })
            .fail(function () {
                ResetSpinners(button);
                modal.find(".modal-alert").removeClass("d-none").text("An error occured when trying to set the " + field + " value.");
            });
        });

        $("#commentModal").on("click", ".modal-btn-confirm", function (e) {
            var button = $(this);
            var modal = $(e.delegateTarget);
            var id = "@Model.BooksByMailCustomer.Id";
            var text = modal.find("#Comment_Text").val();
            $.post(addCommentUrl, { id, text }, function (response) {
                ResetSpinners(button);
                if (response.success) {
                    modal.modal("hide");
                    modal.find("#Comment_Text").text("").val("");
                    var commentCard = $("#templateCard").clone();
                    commentCard.removeAttr("id").removeClass("d-none");
                    commentCard.find(".card-body").text(response.text);
                    commentCard.find(".footer-username").text(response.username);
                    commentCard.find(".footer-createdAt").text(response.createdAt);
                    commentCard.prependTo("#commentSection");
                    modal.find(".modal-alert").addClass("d-none");
                }
                else {
                    modal.find(".modal-alert").removeClass("d-none").text(response.message);
                }
            })
            .fail(function () {
                ResetSpinners(button);
                modal.find(".modal-alert").removeClass("d-none").text("An error occured when trying to set the " + field + " value.");
            });
        });

        $("#customerDetailsHelp").click(function () {
            $(".customer-details-nav").each(function () {
                var elementTitle = $(this).attr("title");
                console.log("Title: " + elementTitle);
                var faIcon = $(this).find(".fa-icon");
                faIcon.removeClass();
                faIcon.addClass("font-weight-bold");
                faIcon.text(elementTitle + ":");
                $("#customerDetailsHelp").hide();
            });
        });

        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}
