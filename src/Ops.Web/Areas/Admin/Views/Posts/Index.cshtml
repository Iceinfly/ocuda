@model Ocuda.Ops.Controllers.Areas.Admin.ViewModels.Posts.IndexViewModel

@await Html.PartialAsync("_PostsPartial")

<form id="addForm" role="form">
    <input id="addStub" asp-for="Post.Stub" type="hidden" readonly />
    <div modal id="addModal" name="Post" type="Ocuda.Utility.TagHelpers.ModalTypes.Add">
        <input id="addTitle" asp-for="Post.Title" formgroup />
        <select id="addCategories" asp-for="Post.PostCategoryId" asp-items="Model.CategoryList" formgroup></select>
    </div>
</form>

<form asp-controller="Posts" asp-action="@(nameof(PostsController.Delete))" method="post" role="form">
    <input id="deleteCurrentPage" asp-for="PaginateModel.CurrentPage" type="hidden" />
    <input id="deleteName" asp-for="Post.Title" type="hidden" />
    <input id="deleteId" asp-for="Post.Id" type="hidden" />
    <div modal id="deleteModal" name="Post" type="Ocuda.Utility.TagHelpers.ModalTypes.Delete"></div>
</form>

<div class="form-group row">
    <div class="col-12">
        <div class="dropdown">
            <span class="dropdown-label">Category:</span>
            <ul class="nav" style="display: inline-table;">
                <li>
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                        @(Model.Category?.Name ?? "Show All") <span class="caret"></span>
                    </a>
                    <div class="dropdown-menu">
                        <a asp-action="@nameof(PostsController.Index)" class="dropdown-item">Show All</a>
                        @foreach (var category in Model.CategoryList)
                        {
                            <a asp-route-Category="@category.Value" class="dropdown-item">@category.Text</a>
                        }
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="mb-2">
    <button class="btn btn-outline-secondary text-dark"
            data-toggle="modal"
            data-target="#addModal">
        Create Blog Post
    </button>
</div>

@if (Model.Posts.Count() == 0)
{
    <div class="alert alert-warning">No Blog Posts Found</div>
}
else
{
    <table class="table table-sm table-bordered link-table">
        <thead>
            <tr>
                <th>Published</th>
                <th>Title</th>
                <th>Author</th>
                <th>Category</th>
                <th>Pinned</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var post in Model.Posts)
            {
            <tr>
                <td class="rowlink-parent">
                    <a asp-action="@(nameof(PostsController.Detail))" asp-route-id="@post.Id" class="rowlink">
                        @(post.PublishedAt.HasValue ? post.PublishedAt.Value.ToString() : "Draft")
                    </a>
                </td>
                <td>@post.Title</td>
                <td>@post.CreatedByName</td>
                <td>@post.PostCategory.Name</td>
                <td align="center">
                    @if (post.IsPinned)
                    {
                        <span class="fa fa-thumbtack"></span>
                    }
                </td>
                <td align="center" class="on-top">
                    <button type="button"
                            class="btn btn-danger btn-xs"
                            data-toggle="modal"
                            data-target="#deleteModal"
                            data-id="@post.Id"
                            data-title="@post.Title">
                        <span class="fa fa-times" aria-hidden="true"></span>
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>

    @if (Model.PaginateModel.MaxPage > 1)
    {
        <paginate paginateModel="@Model.PaginateModel"></paginate>
    }
}

@section scripts {
    <script>
        $("#addForm").submit(function (e) {
            e.preventDefault();
            var form = $(this);

            $.post("@(Url.Action(nameof(PostsController.Create), "Posts"))",
                form.serialize(),
                function (response) {
                    if (response.success == true) {
                        var url = "@(Url.Action(nameof(PostsController.Detail), "Posts"))/" + response.entityId;
                        location.href = url;
                    }
                    else {
                        alert(response.message);
                    }
                });
        });

        $(document).ready(function () {
            $('.rowlink-parent').each(function () {
                $(this).children('a.rowlink').height($(this).height() + 12);
            });
        });
        $(window).resize(function () {
            $('.rowlink-parent').each(function () {
                $(this).children('a.rowlink').height($(this).height() + 12);
            });
        });

        $("#addTitle").on("keyup", function () {
            updateStub($("#addStub"), $(this).val());
        });

        $("#deleteModal").on("show.bs.modal", function (e) {
            var button = $(e.relatedTarget);
            var id = button.data("id");
            var title = button.data("title");
            var modal = $(this);
            $("#deleteName").val(title);
            $("#deleteId").val(id);
            modal.find(".modal-text").text(" Are you sure you want to delete \"" + title + "\"?");
        });
    </script>
}