@model Ocuda.Ops.Controllers.Areas.SiteManagement.ViewModels.Location.LocationImagesViewModel

<div class="row">
    <div class="col-sm-7">
        <h1>
            Images
            <small class="text-muted">
                @Model.LocationName
            </small>
        </h1>
    </div>
    <div class="col-sm-5">
        <a class="btn btn-outline-dark mt-2 mb-1 ml-2 float-right"
           asp-controller="@Ocuda.Ops.Controllers.Areas.SiteManagement.LocationsController.Name"
           asp-action="@(nameof(Ocuda.Ops.Controllers.Areas.SiteManagement.LocationsController.Index))">Back</a>
    </div>
</div>

@await Html.PartialAsync("_LocationPartial")

<div class="row mt-2">
    <h3>Exterior Image</h3>
    <div class="col-md-10 offset-md-2">
        <table class="table table-sm table-bordered table-hover">
            <tr>
                <td>
                    <img class="img-fluid w-100" style="max-width: 500px" src="@Url.Action(nameof(LocationsController.Image), LocationsController.Name, new { promImagePath = Model.Location.ImagePath })">
                </td>
                <td class="align-middle text-end">
                    <a class="btn btn-primary" href="@Url.Action(nameof(LocationsController.MapImageGenerator), LocationsController.Name, new { locationStub = Model.Location.Stub })">
                        TODO: This
                    </a>
                </td>
            </tr>
        </table>
    </div>
</div>

<div class="row mt-2">
    <h3>Location Map</h3>
    <div class="col-md-10 offset-md-2">
        <table class="table table-sm table-bordered table-hover">
            <tr>
                <td>
                    <img class="img-fluid w-100" style="max-width: 500px" src="@Url.Action(nameof(LocationsController.Image), LocationsController.Name, new { promImagePath = Model.Location.MapImagePath })">
                </td>
                <td class="align-middle text-end">
                    <a class="btn btn-primary" href="@Url.Action(nameof(LocationsController.MapImageGenerator), LocationsController.Name, new { locationStub = Model.Location.Stub })">
                        New Map
                    </a>
                </td>
            </tr>
        </table>
    </div>
</div>

<div class="row mt-2">
    <h3>Interior Images</h3>
    <div class="col-md-10 offset-md-2">
        <h5>Add Interior Image</h5>
        <table class="table table-sm table-bordered table-hover">
            <tr>
                <td>
                    <img id="image-preview" class="img-fluid d-none" style="max-height: 300px" />
                    <form asp-action="@nameof(LocationsController.AddInteriorImage)"
                          asp-controller="@LocationsController.Name"
                          asp-route-locationStub="@Model.LocationStub"
                          enctype="multipart/form-data">

                        <input asp-for="Languages" hidden />
                        <input asp-for="Location" hidden />
                        <input class="mb-2" asp-for="Image" type="file" />

                        @for (int i = 0; i < Model.Languages.Count; i++)
                        {
                            <input asp-for="NewInteriorImageAltTexts[i].LanguageId" value="@Model.Languages[i].Id" hidden />
                            <div class="mb-2">
                                <label asp-for="NewInteriorImageAltTexts[i]"><strong>@Model.Languages[i].Description</strong> Alt Text</label>
                                <input class="form-control" asp-for="NewInteriorImageAltTexts[i].AltText" type="text" />
                            </div>
                        }
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </td>
            </tr>
        </table>
        <h5>Existing Interior Images</h5>
        <table class="table table-sm table-bordered table-hover">
            @foreach (var interiorImage in Model.InteriorImages)
            {
                int imgIndex = Model.InteriorImages.IndexOf(interiorImage);
                <form asp-action="@nameof(LocationsController.UpdateInteriorImage)"
                      asp-controller="@LocationsController.Name"
                      asp-route-locationStub="@Model.LocationStub"
                      asp-route-imageId="@interiorImage.Id"
                      enctype="multipart/form-data">
                <tr>
                    <td>
                            @interiorImage.ImagePath
                    </td>
                </tr>
                <tr>
                    <td>

                        <img class="img-fluid w-100" style="max-width: 500px" src="@Url.Action(nameof(LocationsController.Image), LocationsController.Name, new { promImagePath = interiorImage.ImagePath })">

                        <input asp-for="Languages" hidden />
                        <input asp-for="Location" hidden />
                        <input asp-for="InteriorImages[imgIndex].Id" hidden />
                        <input class="mb-2" asp-for="Image" type="file" />

                    </td>
                </tr>
                    @for (int i = 0; i < interiorImage.AllAltTexts.Count; i++)
                    {
                    <tr>
                        <td>
                            <input asp-for="InteriorImages[imgIndex].AllAltTexts[i].LanguageId" value="@Model.Languages[i].Id" hidden />
                            <div class="mb-2">
                                <label asp-for="InteriorImages[imgIndex].AllAltTexts[i].AltText"><strong>@Model.Languages[i].Description</strong> Alt Text</label>
                                <input class="form-control" asp-for="InteriorImages[imgIndex].AllAltTexts[i].AltText" type="text" />
                            </div>
                        </td>
                    </tr>
                    }
                <tr>
                    <td>
                        <button type="submit" class="btn btn-primary">Update</button>
                    </td>
                </tr>
                </form>
            }
        </table>
    </div>
</div>

<script>
    const imageInput = document.querySelector('#Image');
    const imagePreview = document.querySelector('#image-preview');

    imageInput.addEventListener('change', updateImagePreview);

    function updateImagePreview() {
        imagePreview.classList.remove('d-none');

        const reader = new FileReader();

        reader.onload = function (e) {
            imagePreview.src = e.target.result;
        };

        reader.readAsDataURL(imageInput.files[0]);
    }
</script>