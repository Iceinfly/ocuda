@model Ocuda.Ops.Controllers.Areas.SiteManagement.ViewModels.Podcasts.EpisodeDetailsViewModel

@section styles{
    <link rel="stylesheet" href="~/css/md.min.css" asp-append-version="true" />
}

<div class="modal" tabindex="-1" role="dialog" id="uploadModal">
    <div class="modal-dialog" role="document">
        <form asp-action="@nameof(PodcastsController.UpdatePodcastFile)"
              enctype="multipart/form-data"
              method="post">
            <input asp-for="Episode.Id" type="hidden" />
            <input asp-for="EditEpisode" type="hidden" />
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Upload podcast file</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Select a file to upload:</p>
                    <input asp-for="UploadedFile"
                           accept=".mp3"
                           type="file" />
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-outline-secondary"
                            data-dismiss="modal">
                        Cancel
                    </button>
                    <button type="submit"
                            class="btn btn-outline-success"
                            button-spinner>
                        <span class="fas fa-file-upload"></span>
                        Upload file
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade"
     id="deleteModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="deleteModalLabel">
    <div class="modal-dialog" role="document">
        <form id="deleteForm"
              asp-action="@nameof(PodcastsController.DeleteEpisodeShowNotes)"
              asp-controller="@PodcastsController.Name"
              asp-route-segmentId="@Model.Episode.ShowNotesSegmentId"
              method="post"
              role="form">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="deleteModalLabel">Delete show notes</h4>
                    <button type="button"
                            class="close"
                            data-dismiss="modal"
                            aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <span class="fa fa-exclamation-triangle" aria-hidden="true"></span>
                    <span id="modal-text">Are you sure you want to delete the show notes for "@Model.Episode.Title"</span>
                </div>
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-default"
                            data-dismiss="modal"
                            style="margin-right: 1em;">
                        Cancel
                    </button>
                    <button type="submit"
                            id="delModalButton"
                            class="btn btn-danger pull-right"
                            aria-label="Confirm"
                            button-spinner>
                        Delete
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade"
     data-backdrop="static"
     data-keyboard="false"
     id="addSegmentModal"
     tabindex="-1"
     role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <form method="post"
              role="form"
              asp-controller="@PodcastsController.Name"
              asp-action="@nameof(PodcastsController.AddShowNotes)"
              asp-route-episodeId="@Model.Episode.Id"
              novalidate="novalidate">
            <div class="row">
                <div class="col-12 col-sm-10 col-sm-offset-1">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addSegmentTitle">
                                Add segment: Podcast - '@Model.Episode.Podcast?.Title' - Show notes #@Model.Episode.Episode.Value
                            </h5>
                            <button type="button"
                                    class="close"
                                    data-dismiss="modal"
                                    aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <textarea style="width: 100%;"
                                      id="shownotes-segment-text"
                                      name="segmentText"
                                      rows="5"
                                      markdown-editor></textarea>
                        </div>
                        <div class="modal-footer">
                            <button type="button"
                                    class="btn btn-outline-dark mr-1"
                                    data-dismiss="modal">
                                Cancel
                            </button>
                            <button type="submit" class="btn btn-outline-success" button-spinner>
                                <span class="buttonText">Add Segment</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="row mb-2">
    <div class="col-sm-6">
        <h1>
            @(Model.EditEpisode ? "Edit" : "Add") Episode
            <small class="text-muted">@Model.PodcastTitle</small>
        </h1>
    </div>
    <div class="col-sm-6">
        <a class="btn btn-outline-dark mt-2 mb-1 float-end"
           asp-action="@nameof(PodcastsController.Episodes)"
           asp-controller="@PodcastsController.Name"
           asp-route-podcastId="@Model.Episode.PodcastId">Back</a>
    </div>
</div>

<form asp-action="@nameof(PodcastsController.AddUpdateEpisode)" method="post" role="form">
    <div class="row">
        <div class="col">
            <input asp-for="EditEpisode" type="hidden" />
            <input asp-for="Episode.PodcastId" type="hidden" />
            <input asp-for="Episode.Id" type="hidden" />
            @if (Model.EditEpisode)
            {
                <input asp-for="Episode.Episode" type="hidden" />
                <div class="row mb-3">
                    <div class="col-md-3 text-end">
                        <label asp-for="Episode.Episode"></label>
                    </div>
                    <div class="col-md-9">
                        @Model.Episode.Episode
                    </div>
                </div>
            }
            else
            {
                <input asp-for="Episode.Episode" formgroup />
            }
            <input asp-for="Episode.Title" formgroup />
            <input asp-for="Episode.Subtitle" formgroup />
            <textarea asp-for="Episode.Description" rows="4" formgroup></textarea>
            <input asp-for="Episode.Keywords" formgroup />
            @if (Model.Episode.MediaSize > 0)
            {
                <input asp-for="Episode.PublishDate" type="date" formgroup />
            }
            else
            {
                <div class="row mb-3">
                    <div class="col-md-3 text-end">
                        <label asp-for="Episode.PublishDate"></label>
                    </div>
                    <div class="col-md-9">
                        <span class="text-danger fw-bold">
                            Please upload the podcast file to set a publish date.
                        </span>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-9 offset-md-3">
            <button type="submit"
                    class="btn btn-outline-success btn-lg"
                    button-spinner>
                <span class="far fa-save"></span>
                Save
            </button>
        </div>
    </div>
</form>

@if (Model.EditEpisode)
{
    <div class="row my-3">
        <div class="col-md-3 text-end">
            <span class="h3">File details</span>
        </div>
    </div>
    @if (Model.Episode.MediaSize > 0)
    {

        {
            <div class="row my-3">
                <div class="col-md-3 text-end">
                    File name
                </div>
                <div class="col-md-9">
                    @if (Model.FileMissing)
                    {
                        <div class="alert alert-danger">
                            <span class="fa fa-exclamation-triangle"></span>
                            File missing: @Model.Filename
                        </div>

                    }
                    else
                    {
                        @Model.Filename
                    }
                </div>
            </div>
            if (!Model.FileMissing)
            {
                <div class="row my-3">
                    <div class="col-md-3 text-end">
                        File uploaded
                    </div>
                    <div class="col-md-9">
                        @Model.UploadedAt
                    </div>
                </div>
                <div class="row my-3">
                    <div class="col-md-3 text-end">
                        File size
                    </div>
                    <div class="col-md-9">
                        @Model.Episode.MediaSize bytes
                    </div>
                </div>
                <div class="row my-3">
                    <div class="col-md-3 text-end">
                        Duration
                    </div>
                    <div class="col-md-9">
                        @Model.Episode.Duration seconds
                    </div>
                </div>
            }
        }
    }
    <div class="row my-3">
        <div class="col-md-3 text-end pt-1">
            Upload podcast
        </div>
        <div class="col-md-9">
            <button type="button"
                    class="btn btn-sm btn-outline-primary"
                    data-bs-toggle="modal"
                    data-target="#uploadModal">
                @if (Model.Episode.MediaSize > 0)
                {
                    @:Replace podcast file
                }
                else
                {
                    @:Add podcast file
                }
            </button>
        </div>
    </div>
    <div class="row my-3">
        <div class="col-md-3 text-end">
            Maximum allowed file size
        </div>
        <div class="col-md-9">
            @Model.MaximumFileSizeMB MB
        </div>
    </div>
    <div class="row mb-3 mt-4">
        <div class="col-form-label text-md-end col-md-3">
            <label asp-for="Episode.ShowNotesSegmentId">
            </label>
        </div>
        <div class="col-md-9">
            <div class="input-group">
                <input type="text"
                       class="form-control"
                       disabled
                       value="@Model.ShowNotesSegmentName" />
                <div class="input-group-append">
                    @if (string.IsNullOrEmpty(Model.ShowNotesSegmentName) && Model.CanEditShowNotes)
                    {
                        <button id="addShowNotesSegment"
                                class="btn btn-outline-success"
                                data-segment="Description"
                                data-segment-display="Description"
                                data-bs-toggle="modal"
                                data-target="#addSegmentModal">
                            <span class="fas fa-plus-circle"
                                  aria-hidden="true"
                                  title="Add segment"></span>
                        </button>
                    }
                    else if (!string.IsNullOrEmpty(Model.ShowNotesSegmentName) && Model.CanEditShowNotes)
                    {
                        <a class="btn btn-outline-danger"
                           data-target="#deleteModal"
                           data-bs-toggle="modal">
                            <span class="fas fa-minus-circle"
                                  aria-hidden="true"
                                  title="Delete segment"></span>
                        </a>
                        <a class="btn btn-outline-primary"
                           asp-action="@nameof(SegmentsController.Detail)"
                           asp-controller="@SegmentsController.Name"
                           asp-route-id="@Model.Episode.ShowNotesSegmentId">
                            <span class="far fa-file-alt"
                                  aria-hidden="true"
                                  title="Edit segment"></span>
                        </a>
                    }
                </div>
            </div>
        </div>
        <span class="validation-message text-danger"
              asp-validation-for="Episode.ShowNotesSegmentId"></span>
    </div>
}
@section scripts{
    <script src="~/js/md.min.js" asp-append-version="true"></script>
    <script>
        $(function () {
            var segmentEditor = new Markdown.Editor($("#shownotes-segment-text"), {
                allowUploads: false,
                allowImages: false,
                allowCode: false,
                allowHR: false
            });
            if (segmentEditor) {
                segmentEditor.run();
            }
        });
    </script>
}